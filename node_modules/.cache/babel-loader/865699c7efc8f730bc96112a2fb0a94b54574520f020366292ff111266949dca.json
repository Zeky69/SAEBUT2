{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'BankAccountView',\n  data: () => ({\n    idaccount: ''\n  }),\n  computed: {\n    ...mapState(['accountAmount', 'transactionsAccount'])\n  },\n  methods: {\n    ...mapActions(['getAccountAmount', 'getTransactionsofAccount']),\n    formatDate(dateString) {\n      // Vous pouvez personnaliser le format de date ici, par exemple, en utilisant Intl.DateTimeFormat\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","name","data","idaccount","computed","methods","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["src/views/BankAccountView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>idaccount</h1>\n\n    <span>idaccount : </span><input v-model=\"idaccount\">\n    <button @click=\"getAccountAmount(idaccount)\">show amount</button>\n    <button @click=\"getTransactionsofAccount(idaccount)\">show transactions</button>\n    <p v-if=\"accountAmount\">Amount : {{ accountAmount }}</p>\n\n    <!-- Utilisez v-if pour vérifier si accountTransactions existe -->\n    <div v-if=\"transactionsAccount.length < 1\">\n\n\n      {{transactionsAccount.length < 1}}\n      <p v-if=\"transactionsAccount.length < 1\">Transactions :</p>\n      <ul>\n        <!-- Utilisez v-for pour parcourir la liste des transactions -->\n        <li v-for=\"(transaction, index) in transactionsAccount\" :key=\"index\">\n          <!-- Accédez aux propriétés de chaque transaction -->\n          Transaction {{ index + 1 }} :\n          Montant : {{ transaction.amount }}\n          <br>\n          Date : {{ formatDate(transaction.date[\"$date\"]) }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'BankAccountView',\n  data: () => ({\n    idaccount: '',\n  }),\n  computed: {\n    ...mapState(['accountAmount', 'transactionsAccount']),\n  },\n  methods: {\n    ...mapActions(['getAccountAmount', 'getTransactionsofAccount']),\n    formatDate(dateString) {\n      // Vous pouvez personnaliser le format de date ici, par exemple, en utilisant Intl.DateTimeFormat\n      const options = { year: 'numeric', month: 'long', day: 'numeric'};\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    },\n  },\n};\n</script>\n"],"mappings":"AA8BA,SAAAA,QAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,SAAA;EACA;EACAC,QAAA;IACA,GAAAL,QAAA;EACA;EACAM,OAAA;IACA,GAAAL,UAAA;IACAM,WAAAC,UAAA;MACA;MACA,MAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,WAAAC,IAAA,CAAAL,UAAA,EAAAM,kBAAA,CAAAC,SAAA,EAAAN,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}