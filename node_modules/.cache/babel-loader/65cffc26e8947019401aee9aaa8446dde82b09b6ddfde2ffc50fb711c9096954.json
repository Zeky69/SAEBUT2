{"ast":null,"code":"import LocalSource from \"@/datasource/controller\";\nasync function getAccountAmountFromLocalSource(number) {\n  // récupération auprès de la source locale\n  return LocalSource.getAccountAmount(number);\n}\nasync function getAccountAmount(number) {\n  let response = null;\n  try {\n    // changer la méthode appelée quand cette fonctionnalité l'API est prête\n    response = await getAccountAmountFromLocalSource(number);\n  }\n  // NB: le catch n'aura lieu que pour des requête vers l'API, s'il y a une erreur réseau\n  catch (err) {\n    response = {\n      error: 1,\n      status: 404,\n      data: 'erreur réseau, impossible de récupérer le montant du compte'\n    };\n  }\n  return response;\n}\nasync function getTransactionsofAccountFromLocalSource(number) {\n  // récupération auprès de la source locale\n  return LocalSource.getTransactionsofAccount(number);\n}\nasync function getTransactionsofAccount(number) {\n  let response = null;\n  try {\n    // changer la méthode appelée quand cette fonctionnalité l'API est prête\n    response = await getTransactionsofAccountFromLocalSource(number);\n  }\n  // NB: le catch n'aura lieu que pour des requête vers l'API, s'il y a une erreur réseau\n  catch (err) {\n    response = {\n      error: 1,\n      status: 404,\n      data: 'erreur réseau, impossible de récupérer les transactions du compte'\n    };\n  }\n  return response;\n}\nexport default {\n  getAccountAmount,\n  getTransactionsofAccount\n};","map":{"version":3,"names":["LocalSource","getAccountAmountFromLocalSource","number","getAccountAmount","response","err","error","status","data","getTransactionsofAccountFromLocalSource","getTransactionsofAccount"],"sources":["/home/kalinux/Calixte/BUT2/devWeb/frontend/TP/drmad/src/services/bankaccount.service.js"],"sourcesContent":["import LocalSource from \"@/datasource/controller\";\n\n\nasync function getAccountAmountFromLocalSource(number) {\n  // récupération auprès de la source locale\n  return LocalSource.getAccountAmount(number)\n}\n\nasync function getAccountAmount(number) {\n    let response = null;\n    try {\n        // changer la méthode appelée quand cette fonctionnalité l'API est prête\n        response = await getAccountAmountFromLocalSource(number)\n    }\n    // NB: le catch n'aura lieu que pour des requête vers l'API, s'il y a une erreur réseau\n    catch(err) {\n        response = {error: 1, status: 404, data: 'erreur réseau, impossible de récupérer le montant du compte'  }\n    }\n    return response\n}\n\nasync function getTransactionsofAccountFromLocalSource(number) {\n    // récupération auprès de la source locale\n    return LocalSource.getTransactionsofAccount(number)\n}\n\nasync function getTransactionsofAccount(number) {\n    let response = null;\n    try {\n        // changer la méthode appelée quand cette fonctionnalité l'API est prête\n        response = await getTransactionsofAccountFromLocalSource(number)\n    }\n    // NB: le catch n'aura lieu que pour des requête vers l'API, s'il y a une erreur réseau\n    catch(err) {\n        response = {error: 1, status: 404, data: 'erreur réseau, impossible de récupérer les transactions du compte'  }\n    }\n    return response\n}\n\n\nexport default {\n    getAccountAmount,\n    getTransactionsofAccount,\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AAGjD,eAAeC,+BAA+BA,CAACC,MAAM,EAAE;EACrD;EACA,OAAOF,WAAW,CAACG,gBAAgB,CAACD,MAAM,CAAC;AAC7C;AAEA,eAAeC,gBAAgBA,CAACD,MAAM,EAAE;EACpC,IAAIE,QAAQ,GAAG,IAAI;EACnB,IAAI;IACA;IACAA,QAAQ,GAAG,MAAMH,+BAA+B,CAACC,MAAM,CAAC;EAC5D;EACA;EACA,OAAMG,GAAG,EAAE;IACPD,QAAQ,GAAG;MAACE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAA+D,CAAC;EAC7G;EACA,OAAOJ,QAAQ;AACnB;AAEA,eAAeK,uCAAuCA,CAACP,MAAM,EAAE;EAC3D;EACA,OAAOF,WAAW,CAACU,wBAAwB,CAACR,MAAM,CAAC;AACvD;AAEA,eAAeQ,wBAAwBA,CAACR,MAAM,EAAE;EAC5C,IAAIE,QAAQ,GAAG,IAAI;EACnB,IAAI;IACA;IACAA,QAAQ,GAAG,MAAMK,uCAAuC,CAACP,MAAM,CAAC;EACpE;EACA;EACA,OAAMG,GAAG,EAAE;IACPD,QAAQ,GAAG;MAACE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAqE,CAAC;EACnH;EACA,OAAOJ,QAAQ;AACnB;AAGA,eAAe;EACXD,gBAAgB;EAChBO;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}