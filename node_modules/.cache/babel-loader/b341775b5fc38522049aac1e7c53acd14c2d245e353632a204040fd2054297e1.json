{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nimport { transactions } from \"../datasource/data\";\nexport default {\n  name: 'BankAccountView',\n  data: () => ({\n    idaccount: ''\n  }),\n  computed: {\n    ...mapState(['accountAmount', 'accountTransactions'])\n  },\n  methods: {\n    transactions() {\n      return transactions;\n    },\n    ...mapActions(['getAccountAmount', 'getTransactionsofAccount']),\n    formatDate(dateString) {\n      // Vous pouvez personnaliser le format de date ici, par exemple, en utilisant Intl.DateTimeFormat\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","transactions","name","data","idaccount","computed","methods","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["src/views/BankAccountView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>idaccount</h1>\n\n    <span>idaccount : </span><input v-model=\"idaccount\">\n    <button @click=\"getAccountAmount(idaccount)\">show amount</button>\n    <p v-if=\"accountAmount\">Amount : {{ accountAmount }}</p>\n    <button @click=\"getTransactionsofAccount(idaccount)\">show transactions</button>\n\n    <!-- Utilisez v-if pour vÃ©rifier si accountTransactions existe -->\n    <p v-if=\"accountTransactions\"> Transactions: : {{ accountTransactions}}</p>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport {transactions} from \"../datasource/data\";\n\nexport default {\n  name: 'BankAccountView',\n  data: () => ({\n    idaccount: '',\n  }),\n  computed: {\n    ...mapState(['accountAmount', 'accountTransactions']),\n  },\n  methods: {\n    transactions() {\n      return transactions\n    },\n    ...mapActions(['getAccountAmount', 'getTransactionsofAccount']),\n    formatDate(dateString) {\n      // Vous pouvez personnaliser le format de date ici, par exemple, en utilisant Intl.DateTimeFormat\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    },\n  },\n};\n</script>\n"],"mappings":"AAeA,SAAAA,QAAA,EAAAC,UAAA;AACA,SAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,SAAA;EACA;EACAC,QAAA;IACA,GAAAN,QAAA;EACA;EACAO,OAAA;IACAL,aAAA;MACA,OAAAA,YAAA;IACA;IACA,GAAAD,UAAA;IACAO,WAAAC,UAAA;MACA;MACA,MAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,WAAAC,IAAA,CAAAL,UAAA,EAAAM,kBAAA,CAAAC,SAAA,EAAAN,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}